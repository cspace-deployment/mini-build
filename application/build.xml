<project name="tenant-customizations-application" default="deploy" basedir=".">
    <description>Per-tenant application customizations for CollectionSpace</description>
    
    <!-- 'environment' must be declared to bring values of system -->
    <!-- environment variables into Ant, prior to reading any -->
    <!-- properties files that may reference those values. -->
    <property environment="env" />
    
    <!-- Set global properties for this build -->
    <property file="../build.properties" />
    <!-- Set tenant-specific properties for this build -->
    <property file="../our-tenant.properties" />
    <!-- Set UI properties for this build -->
    <property file="application.properties" />

    <target name="deploy"
        description="Deploy tenant-specific application customizations to the deployment location (i.e. the appropriate CollectionSpace server folder)" 
        depends="check-config-exists, deploy-to-config">
    </target>
    
    <target name="check-config-exists"
        description="Identify whether the deployment location exists">
        <available type="dir" file="${application.config.path}"
            property="application.config.path.exists" />
    </target>
    
    <target name="deploy-to-config"
        description="Copies tenant-specific application customizations to the deployment location"
        depends="deploy-tenant-config, deploy-tenant-host-config">
    </target>
    
    <!-- Copies and renames *-tenant.xml -->
    <target name="deploy-tenant-config"
        description="Copies tenant-specific application configuration settings to the deployment location"
        if="${application.config.path.exists}"
        depends="update-config-with-tenant">
        <!-- Copy the placeholder tenant config, changing its name -->
        <!-- to the actual tenant's short name and applying a new -->
        <!-- filename prefix -->
        <copy todir="${application.config.path}">
            <fileset dir="${application.our.tenant}" 
                includes="**/${sample.tenant.name.short}-tenant.xml" />
            <globmapper from="${sample.tenant.name.short}-tenant.xml"
                to="cspace-config-${our.tenant.name.short}.xml" />
        </copy>
        <!-- Copy any other tenant config files in this directory as well, -->
        <!-- applying a new filename prefix -->
        <copy todir="${application.config.path}">
            <fileset dir="${application.our.tenant}"
                includes="**/*-tenant.xml"
                excludes="**/${sample.tenant.name.short}-tenant.xml" />
            <globmapper from="*-tenant.xml"
                to="cspace-config-*.xml" />
       </copy>
    </target>

    <!-- Copies and renames *-local-settings.xml -->
    <target name="deploy-tenant-host-config"
        description="Copies tenant-specific, host-related application configuration settings (hosts, ports, URLs, etc. relevant to this tenant) to the deployment location"
        if="${application.config.path.exists}"
        depends="update-host-config-with-tenant">
        <copy todir="${application.config.path}">
            <fileset dir="${application.our.tenant}" 
                includes="${sample.tenant.name.short}-${application.local.settings.suffix}" />
            <globmapper from="${sample.tenant.name.short}-${application.local.settings.suffix}"
                to="${our.tenant.name.short}-${application.local.settings.suffix}" />
        </copy>
        <!-- Copy any other host-related configuration files in this directory as well, without renaming them during copying. -->
        <copy todir="${application.config.path}">
            <fileset dir="${application.our.tenant}" 
                includes="**/*-${application.local.settings.suffix}" 
                excludes="**/${sample.tenant.name.short}-${application.local.settings.suffix}" />
        </copy>
    </target>

    <!-- Inserts customized tenant name in the 'include' reference to a local-settings.xml file in *-tenant.xml -->
    <target name="update-config-with-tenant"
        description="Updates tenant-specific application configuration settings to reflect the customized tenant name">
        <replaceregexp
            match="include src=(.*),settings.xml"
            replace="include src=&quot;${our.tenant.name.short}-${application.local.settings.suffix},settings.xml">
            <fileset dir="${application.our.tenant}" includes="**/*-tenant.xml" />
        </replaceregexp>
    </target>

    <!-- Replaces default tenant name with customized tenant name in *local-settings.xml -->
    <target name="update-host-config-with-tenant"
        description="Updates tenant-specific, host-related application configuration settings to reflect the customized tenant name">
         <replaceregexp
            match="${application.default.tenant}"
            replace="${our.tenant.name.short}"
            flags="g">
            <fileset dir="${application.our.tenant}" 
                includes="**/${sample.tenant.name.short}-${application.local.settings.suffix}" />
        </replaceregexp>
    </target>

</project>
